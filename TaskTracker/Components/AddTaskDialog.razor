@using MudBlazor
@using MediatR
@using TaskTracker.Models
@using TaskTracker.Features.Tasks.Commands
@inject IMediator Mediator
@inject IDialogService DialogService

<MudDialog>
    <MudDialogContent>
        <MudTextField @bind-Value="_newTask.Title" Label="Title" Required="true" />
        <MudTextField @bind-Value="_newTask.Description" Label="Description" Lines="3" />
        <MudNumericField @bind-Value="_newTask.EstimatedEffort" Label="Estimated Effort (minutes)" Required="true" />
    </MudDialogContent>
    <MudDialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Add Task</MudButton>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
    </MudDialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    private TaskItem _newTask = new();

    private async System.Threading.Tasks.Task Submit()
    {
        var command = new CreateTaskCommand
        {
            Title = _newTask.Title,
            Description = _newTask.Description,
            EstimatedEffort = _newTask.EstimatedEffort
        };
        await Mediator.Send(command);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
} 